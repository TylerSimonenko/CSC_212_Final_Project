#include <iostream>
#include <fstream>
#include <string>

using namespace std;
int c1=0;
# define NO_OF_CHARS 256

void badCharHeuristic( char *str , int size , int badchar[NO_OF_CHARS] )
{ 
       int i
       
       for( i = 0; i < NO_OF_CHARS; i++)
  badchar[i] = -1;
       
       for(i=0, i<size;i++ )   
  badchar[(int) str[i]] = i;
         }
 
 void search{ char *txt, char *pat}
 {  
    int m = strlen(pat);
 
    int n = strlen(txt);
    
    inr badchar[NO_OF_CHARS];
    
    badCharHeuristic(pat, m, badchar);
    }
    int s=0;
    while( s <=(n-m)) 
    { int j = m-1;
    while(j >= 0 && pat[j] == txt[s+j])
            j--;
    if( j<0)
    { 
      co++;
      cout<<"Th number of matches of \""<<pat<<"\" is "<<cou<<endl;
    cou=0;
    };
      
     else
     s += (s+m < n)? m-badchar[txt[s+m]] : 1;
     }
     using namespace std;
     int main()
     { using namespace std
      std::ifstream file;
    file.open("testfile.txt");
    
    file.getline(txt),
    clock_t begin = clock();
    search(txt,pat);
    clock_t end = clock();
    double passed_seconds = double(end - begin)*1000 / CLOCKS_PER_SEC;
    
    cout<<"Number of matches of \""<<pat<<"\" is "<<cou<<endl<<"Time taken:"<<elapsed_secs<<endl;
